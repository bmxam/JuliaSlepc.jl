var documenterSearchIndex = {"docs":
[{"location":"example/demo1/#Demo-1","page":"Demo 1","title":"Demo 1","text":"","category":"section"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Tutorial from slepc4py manual","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"using PetscWrap\nusing SlepcWrap","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Number of points","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"n = 30","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Initialize SLEPc","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"SlepcInitialize()","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Create the problem matrices","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"A = MatCreate()\nMatSetSizes(A, PETSC_DECIDE, PETSC_DECIDE, n, n)\nMatSetFromOptions(A)\nMatSetUp(A)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Get rows handled by the local processor","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"rstart, rend = MatGetOwnershipRange(A)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Fill matrix A","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"if rstart == 0\n    MatSetValues(A, [0], [0, 1], [2.0, 1.0], INSERT_VALUES)\n    rstart += 1\nend\nif rend == n\n    MatSetValues(A, [n - 1], [n - 2, n - 1], [-1.0, 2.0], INSERT_VALUES)\n    rend -= 1\nend\nfor i in rstart:rend-1\n    MatSetValues(A, [i], [i - 1, i, i + 1], [-1.0, 2.0, -1.0], INSERT_VALUES)\nend","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Assemble the matrices","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"MatAssemblyBegin(A, MAT_FINAL_ASSEMBLY)\nMatAssemblyEnd(A, MAT_FINAL_ASSEMBLY)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Now we set up the eigenvalue solver : note that contrary to the original tutorial, we select the \"smallest magnitude\" eigenvalues","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"eps = EPSCreate()\nEPSSetOperators(eps, A)\nEPSSetWhichEigenpairs(eps, EPS_SMALLEST_MAGNITUDE)\nEPSSetFromOptions(eps)\nEPSSetUp(eps)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Then we solve","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"EPSSolve(eps)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Optional : display informations aboutthe sover","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"EPSView(eps)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"And finally we can inspect the solution. Let's first get the number of converged eigenvalues:","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"nconv = EPSGetConverged(eps)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Then we can get/display these eigenvalues","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"for ieig in 0:nconv-1\n    vpr, vpi = EPSGetEigenvalue(eps, ieig)\n    @show vpr\nend","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"Finally, let's free the memory","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"MatDestroy(A)\nEPSDestroy(eps)","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"And call finalize when you're done","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"SlepcFinalize()","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"","category":"page"},{"location":"example/demo1/","page":"Demo 1","title":"Demo 1","text":"This page was generated using Literate.jl.","category":"page"},{"location":"api/eps/#Eigenvalue-Problem-solver-(EPS)","page":"Eigenvalue Problem solver (EPS)","title":"Eigenvalue Problem solver (EPS)","text":"","category":"section"},{"location":"api/eps/","page":"Eigenvalue Problem solver (EPS)","title":"Eigenvalue Problem solver (EPS)","text":"Modules = [SlepcWrap]\nPages   = [\"src/eps.jl\"]","category":"page"},{"location":"api/eps/#SlepcWrap.EPSCreate","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSCreate","text":"EPSCreate(comm::MPI.Comm, eps::SlepcEPS)\n\nWrapper for EPSCreate\n\n\n\n\n\n","category":"function"},{"location":"api/eps/#SlepcWrap.EPSDestroy-Tuple{SlepcEPS}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSDestroy","text":"EPSDestroy(eps::SlepcEPS)\n\nWrapper for EPSDestroy\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetConverged-Tuple{SlepcEPS}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetConverged","text":"EPSGetConverged(eps::SlepcEPS)\n\nWrapper for EPSGetConverged : return the number of converged eigenvalues.\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetEigenpair-Tuple{SlepcEPS, Any, PetscWrap.PetscVec, PetscWrap.PetscVec}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetEigenpair","text":"EPSGetEigenpair(eps::SlepcEPS, ieig, vecr::PetscVec, veci::PetscVec)\n\nWrapper for EPSGetEigenpair. SLEPc 0-based indexing is used : 0 < ieig < EPSGetConverged-1\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetEigenpair-Tuple{SlepcEPS, Any}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetEigenpair","text":"EPSGetEigenpair(eps::SlepcEPS, ieig)\n\nWrapper for EPSGetEigenpair without providing pre-allocated vec. nor one of the operator matrix\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetEigenpair-Tuple{SlepcEPS, PetscWrap.PetscMat, Any}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetEigenpair","text":"EPSGetEigenpair(eps::SlepcEPS, mat::PetscMat, ieig)\n\nWrapper for EPSGetEigenpair without providing pre-allocated vec. but providing one of the operator matrix\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetEigenvalue-Tuple{SlepcEPS, Any}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetEigenvalue","text":"EPSGetEigenvalue(eps::SlepcEPS, ieig)\n\nWrapper for EPSGetEigenvalue . SLEPc 0-based indexing is used : 0 < ieig < EPSGetConverged-1 ()\n\nA tuple (real, imag) is returned.\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetEigenvector-Tuple{SlepcEPS, Any, PetscWrap.PetscVec, PetscWrap.PetscVec}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetEigenvector","text":"EPSGetEigenvector(eps::SlepcEPS, ivec, vecr::PetscVec, veci::PetscVec)\n\nWrapper for EPSGetEigenvector. SLEPc 0-based indexing is used : 0 < ivec < EPSGetConverged-1 ()\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetOperators-Tuple{SlepcEPS}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetOperators","text":"EPSGetOperators(eps::SlepcEPS)\n\nWrapper for EPSGetOperators\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSGetTolerances-Tuple{SlepcEPS}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSGetTolerances","text":"EPSGetTolerances(eps::SlepcEPS)\n\nWrapper for EPSGetTolerances\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSSetFromOptions-Tuple{SlepcEPS}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSSetFromOptions","text":"EPSSetFromOptions(eps::SlepcEPS)\n\nWrapper for EPSSetFromOptions\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSSetOperators-Tuple{SlepcEPS, PetscWrap.PetscMat, PetscWrap.PetscMat}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSSetOperators","text":"EPSSetOperators(eps::SlepcEPS, A::PetscMat, B::PetscMat)\n\nWrapper for EPSSetOperators with two matrices\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSSetOperators-Tuple{SlepcEPS, PetscWrap.PetscMat}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSSetOperators","text":"EPSSetOperators(eps::SlepcEPS, A::PetscMat)\n\nWrapper for EPSSetOperators with only one matrix\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSSetTarget-Tuple{SlepcEPS, Float64}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSSetTarget","text":"EPSSetTarget(eps::SlepcEPS, target::PetscScalar)\n\nWrapper for EPSSetTarget\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSSetUp-Tuple{SlepcEPS}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSSetUp","text":"EPSSetUp(eps::SlepcEPS)\n\nWrapper for EPSSetup\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSSetWhichEigenpairs-Tuple{SlepcEPS, SlepcWrap.EPSWhich}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSSetWhichEigenpairs","text":"EPSSetWhichEigenpairs(eps::SlepcEPS, which::EPSWhich)\n\nWrapper for EPSSetWhichEigenpairs\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSSolve-Tuple{SlepcEPS}","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSSolve","text":"EPSSolve(eps::SlepcEPS)\n\nWrapper for EPSSolve\n\n\n\n\n\n","category":"method"},{"location":"api/eps/#SlepcWrap.EPSView","page":"Eigenvalue Problem solver (EPS)","title":"SlepcWrap.EPSView","text":"EPSView(eps::SlepcEPS, viewer::PetscViewer = PetscViewerStdWorld())\n\nWrapper for EPSView\n\n\n\n\n\n","category":"function"},{"location":"example/helmholtz/#Helmholtz-equation","page":"Helmholtz equation","title":"Helmholtz equation","text":"","category":"section"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"In this example, we use the SLEPc to find the eigenvalues of the following Helmholtz equation: u + omega^2 u = 0 associated to Dirichlet boundary conditions on the domain 01. Hence the theoritical eigenvalues are omega = k pi with k in mathbbZ^*; and the associated eigenvectors are u(x) = sin(kpix). A centered finite difference scheme is used for the spatial discretization.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"The equation is written in matrix form Au = alpha Bu where alpha = omega^2.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"To run this example, simply execute mpirun -n your_favourite_integer julia helmholtz.jl","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"In this example, PETSc/SLEPc legacy method names are used. For more fancy names, check the next example.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Note that the way we achieve things in the document can be highly improved and the purpose of this example is only demonstrate some method calls to give an overview.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Start by importing both PetscWrap, for the distributed matrices, and SlepcWrap for the eigenvalues.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"using PetscWrap\nusing SlepcWrap","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Number of mesh points and mesh step","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"n = 21\nΔx = 1.0 / (n - 1)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Initialize SLEPc. Either without arguments, calling SlepcInitialize() or using \"command-line\" arguments. To do so, either provide the arguments as one string, for instance SlepcInitialize(\"-eps_max_it 100 -eps_tol 1e-5\") or provide each argument in separate strings : SlepcInitialize([\"-eps_max_it\", \"100\", \"-eps_tol\", \"1e-5\"). Here we ask for the five closest eigenvalues to 0, using a non-zero pivot for the LU factorization and a \"shift-inverse\" process.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"SlepcInitialize(\"-eps_target 0 -eps_nev 5 -st_pc_factor_shift_type NONZERO -st_type sinvert\")","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Create the problem matrices, set sizes and apply \"command-line\" options. Note that we should set the number of preallocated non-zeros to increase performance.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"A = MatCreate()\nB = MatCreate()\nMatSetSizes(A, PETSC_DECIDE, PETSC_DECIDE, n, n)\nMatSetSizes(B, PETSC_DECIDE, PETSC_DECIDE, n, n)\nMatSetFromOptions(A)\nMatSetFromOptions(B)\nMatSetUp(A)\nMatSetUp(B)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Get rows handled by the local processor","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"A_rstart, A_rend = MatGetOwnershipRange(A)\nB_rstart, B_rend = MatGetOwnershipRange(B)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Fill matrix A  with second order derivative central scheme","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"for i in A_rstart:A_rend-1\n    if (i == 0)\n        MatSetValues(A, [0], [0, 1], [-2.0, 1] / Δx^2, INSERT_VALUES)\n    elseif (i == n - 1)\n        MatSetValues(A, [n - 1], [n - 2, n - 1], [1.0, -2.0] / Δx^2, INSERT_VALUES)\n    else\n        MatSetValues(A, [i], i-1:i+1, [1.0, -2.0, 1.0] / Δx^2, INSERT_VALUES)\n    end\nend","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Fill matrix B with identity matrix","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"for i in B_rstart:B_rend-1\n    MatSetValue(B, i, i, -1.0, INSERT_VALUES)\nend","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Set boundary conditions : u(0) = 0 and u(1) = 0. Only the processor handling the corresponding rows are playing a role here.","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"(A_rstart == 0) && MatSetValues(A, [0], [0, 1], [1.0, 0.0], INSERT_VALUES)\n(B_rstart == 0) && MatSetValue(B, 0, 0, 0.0, INSERT_VALUES)\n\n(A_rend == n) && MatSetValues(A, [n - 1], [n - 2, n - 1], [0.0, 1.0], INSERT_VALUES)\n(B_rend == n) && MatSetValue(B, n - 1, n - 1, 0.0, INSERT_VALUES)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Assemble the matrices","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"MatAssemblyBegin(A, MAT_FINAL_ASSEMBLY)\nMatAssemblyBegin(B, MAT_FINAL_ASSEMBLY)\nMatAssemblyEnd(A, MAT_FINAL_ASSEMBLY)\nMatAssemblyEnd(B, MAT_FINAL_ASSEMBLY)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Now we set up the eigenvalue solver","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"eps = EPSCreate()\nEPSSetOperators(eps, A, B)\nEPSSetFromOptions(eps)\nEPSSetUp(eps)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Then we solve","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"EPSSolve(eps)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Optional : display informations aboutthe sover","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"EPSView(eps)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"And finally we can inspect the solution. Let's first get the number of converged eigenvalues:","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"nconv = EPSGetConverged(eps)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Then we can get/display these eigenvalues (more precisely their square root, i.e simeq omega)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"for ieig in 0:nconv-1\n    vpr, vpi = EPSGetEigenvalue(eps, ieig)\n    @show √(vpr), √(vpi)\nend","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"We can also play with eigen vectors. First, create two Petsc vectors to allocate memory","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"vecr, veci = MatCreateVecs(A)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Then loop over the eigen pairs and retrieve eigenvectors","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"for ieig in 0:nconv-1\n    vpr, vpi, vecpr, vecpi = EPSGetEigenpair(eps, ieig, vecr, veci)\n\n    # At this point, you can call VecGetArray to obtain a Julia array (see PetscWrap examples).\n    # If you are on one processor, you can even plot the solution to check that you have a sinus\n    # solution. On multiple processors, this would require to \"gather\" the solution on one processor only.\nend","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"Finally, let's free the memory","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"MatDestroy(A)\nMatDestroy(B)\nEPSDestroy(eps)","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"And call finalize when you're done","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"SlepcFinalize()\n","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"","category":"page"},{"location":"example/helmholtz/","page":"Helmholtz equation","title":"Helmholtz equation","text":"This page was generated using Literate.jl.","category":"page"},{"location":"example/complex/#Complex-numbers","page":"Complex numbers","title":"Complex numbers","text":"","category":"section"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Trivial example to demonstrate the capability of handling complex numbers","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"using PetscWrap\nusing SlepcWrap","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Start by checking that you're using a PETSc/SLEPc build with complex number","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"(PetscScalar <: Real) && error(\"You must configure PETSc/SLEPc with complex numbers to run this example\")","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Initialize SLEPc","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"SlepcInitialize()","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Create matrix","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"A = create_matrix(4, 4; auto_setup=true)","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Get rows handled by the local processor","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"A_rstart, A_rend = get_range(A)","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Create diag matrix with complex numbers","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"J = I = A_rstart:A_rend\nV = im .* I\nset_values!(A, I, J, V)\nassemble!(A)","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Now we set up the eigenvalue solver","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"eps = create_eps(A; auto_setup=true)","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Then we solve","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"solve!(eps)","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Show converged eivenvalues","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"@show get_eigenvalues(eps)","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"Finally, let's free the memory","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"destroy!(A)\ndestroy!(eps)","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"And call finalize when you're done","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"SlepcFinalize()\n","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"","category":"page"},{"location":"example/complex/","page":"Complex numbers","title":"Complex numbers","text":"This page was generated using Literate.jl.","category":"page"},{"location":"example/helmholtz_fancy/#Helmholtz-equation-with-fancy-names","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"","category":"section"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"In this example, we use the SLEPc to find the eigenvalues of the following Helmholtz equation: u + omega^2 u = 0 associated to Dirichlet boundary conditions on the domain 01. Hence the theoritical eigenvalues are omega = k pi with k in mathbbZ^*; and the associated eigenvectors are u(x) = sin(kpix). A centered finite difference scheme is used for the spatial discretization.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"The equation is written in matrix form Au = alpha Bu where alpha = omega^2.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"To run this example, simplfy excute mpirun -n your_favourite_integer julia helmholtz_FD.jl","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"In this example, \"fancy\" names are use to interface with PETSc/SLEPc. For legacy method names check the previous example.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Note that the way we achieve things in the document can be highly improved and the purpose of this example is only demonstrate some method calls to give an overview.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Start by importing both PetscWrap, for the distributed matrices, and SlepcWrap for the eigenvalues.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"using PetscWrap\nusing SlepcWrap","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Number of mesh points and mesh step","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"n = 21\nΔx = 1.0 / (n - 1)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Initialize SLEPc. Either without arguments, calling SlepcInitialize() or using \"command-line\" arguments. To do so, either provide the arguments as one string, for instance SlepcInitialize(\"-eps_max_it 100 -eps_tol 1e-5\") or provide each argument in separate strings : PetscInitialize([\"-eps_max_it\", \"100\", \"-eps_tol\", \"1e-5\"). Here we ask for the five closest eigenvalues to 0, using a non-zero pivot for the LU factorization and a \"shift-inverse\" process.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"SlepcInitialize(\"-eps_target 0 -eps_nev 5 -st_pc_factor_shift_type NONZERO -st_type sinvert\")","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Create the problem matrices, set sizes and apply \"command-line\" options. Note that we should set the number of preallocated non-zeros to increase performance.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"A = create_matrix(n, n)\nB = create_matrix(n, n)\nset_from_options!(A)\nset_from_options!(B)\nset_up!(A)\nset_up!(B)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Get rows handled by the local processor","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"A_rstart, A_rend = get_range(A)\nB_rstart, B_rend = get_range(B)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Fill matrix A  with second order derivative central scheme","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"for i in A_rstart:A_rend\n    if (i == 1)\n        A[1, 1:2] = [-2.0, 1] / Δx^2\n    elseif (i == n)\n        A[n, n-1:n] = [1.0, -2.0] / Δx^2\n    else\n        A[i, i-1:i+1] = [1.0, -2.0, 1.0] / Δx^2\n    end\nend","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Fill matrix B with identity matrix","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"for i in B_rstart:B_rend\n    B[i, i] = -1.0\nend","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Set boundary conditions : u(0) = 0 and u(1) = 0. Only the processor handling the corresponding rows are playing a role here.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"(A_rstart == 1) && (A[1, 1:2] = [1.0 0.0])\n(B_rstart == 1) && (B[1, 1] = 0.0)\n\n(A_rend == n) && (A[n, n-1:n] = [0.0 1.0])\n(B_rend == n) && (B[n, n] = 0.0)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Assemble the matrices","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"assemble!(A)\nassemble!(B)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Now we set up the eigenvalue solver","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"eps = create_eps(A, B)\nset_from_options!(eps)\nset_up!(eps)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Then we solve","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"solve!(eps)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"And finally we can inspect the solution. Let's first get the number of converged eigenvalues:","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"nconv = neigs(eps)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Then we can get/display these eigenvalues (more precisely their square root, i.e simeq omega)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"for ieig in 1:nconv\n    eig = get_eig(eps, ieig)\n    @show √(real(eig))\nend","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"You can also get all the converged eigenvalues in one call","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"eigs = get_eigenvalues(eps)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"We can also play with eigen vectors.","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"for ieig in 1:nconv\n    vpr, vpi, vecpr, vecpi = get_eigenpair(eps, ieig)\n\n    # At this point, you can call VecGetArray to obtain a Julia array (see PetscWrap examples).\n    # If you are on one processor, you can even plot the solution to check that you have a sinus\n    # solution. On multiple processors, this would require to \"gather\" the solution on one processor only.\nend","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Export eigenvalues to a file","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"eigenvalues2file(eps, \"/tmp/eigs.dat\", 1:nconv)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Export eigenvectors as two ASCII matrices (real/imag) (experimental function)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"eigenvectors2file(eps, \"/tmp/eigenvectors\", 1:nconv)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"Finally, let's free the memory","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"destroy!(A)\ndestroy!(B)\ndestroy!(eps)","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"And call finalize when you're done","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"SlepcFinalize()\n","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"","category":"page"},{"location":"example/helmholtz_fancy/","page":"Helmholtz equation with fancy names","title":"Helmholtz equation with fancy names","text":"This page was generated using Literate.jl.","category":"page"},{"location":"api/init/#Initialization","page":"Initialization","title":"Initialization","text":"","category":"section"},{"location":"api/init/","page":"Initialization","title":"Initialization","text":"Modules = [SlepcWrap]\nPages   = [\"init.jl\"]","category":"page"},{"location":"api/init/#SlepcWrap.SlepcFinalize-Tuple{}","page":"Initialization","title":"SlepcWrap.SlepcFinalize","text":"Wrapper to SlepcFinalize\n\n\n\n\n\n","category":"method"},{"location":"api/init/#SlepcWrap.SlepcInitialize","page":"Initialization","title":"SlepcWrap.SlepcInitialize","text":"Initialize SLEPc.\n\nIf cmd_line_args == true, then command line arguments passed to Julia are used as arguments for SLEPc (leading to a call to SlepcInitializeNoPointers).\n\nOtherwise, if cmd_line_args == false, initialize SLEPc without arguments (leading to a call to SlepcInitializeNoArguments).\n\n\n\n\n\n","category":"function"},{"location":"api/init/#SlepcWrap.SlepcInitialize-Tuple{Vector{String}, String, String}","page":"Initialization","title":"SlepcWrap.SlepcInitialize","text":"Wrapper to SlepcInitializeNoPointers\n\nImplementation\n\nI don't know if I am supposed to use PetscInt or not...\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SlepcWrap","category":"page"},{"location":"#SlepcWrap.jl","page":"Home","title":"SlepcWrap.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SlepcWrap.jl is a parallel Julia wrapper for the (awesome) SLEPc library. As described on their main page, \"SLEPc is a software library for the solution of large scale sparse eigenvalue problems on parallel computers. It is an extension of PETSc and can be used for linear eigenvalue problems in either standard or generalized form, with real or complex arithmetic.\".","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that as SLEPc is an extension of PETSc, SlepcWrap.jl is an extension of PetscWrap.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The project is far from covering all SLEPc methods, but adding a new wrapper is very quick and easy.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Check out the examples or the API.","category":"page"},{"location":"api/fancy/fancy/#Eigenvalue-Problem-solver-(EPS)","page":"API fancy","title":"Eigenvalue Problem solver (EPS)","text":"","category":"section"},{"location":"api/fancy/fancy/","page":"API fancy","title":"API fancy","text":"Modules = [SlepcWrap]\nPages   = [\"fancy/eps.jl\"]","category":"page"},{"location":"api/fancy/fancy/#SlepcWrap.create_eps-Tuple{PetscWrap.PetscMat, PetscWrap.PetscMat}","page":"API fancy","title":"SlepcWrap.create_eps","text":"create_eps(A::PetscMat, B::PetscMat)\n\nFor a generalized eigenvalue problem\n\n\n\n\n\n","category":"method"},{"location":"api/fancy/fancy/#SlepcWrap.create_eps-Tuple{PetscWrap.PetscMat}","page":"API fancy","title":"SlepcWrap.create_eps","text":"create_eps(A::PetscMat)\n\nFor a standard eigenvalue prolem.\n\n\n\n\n\n","category":"method"},{"location":"api/fancy/fancy/#SlepcWrap.eigenvalues2file","page":"API fancy","title":"SlepcWrap.eigenvalues2file","text":"eigenvalues2file(eps::SlepcEPS, ieigs, eigs_path = \"eigenvalues.dat\"; mpi_rank = 0, delim=\",\")\n\nWrite eigenvalues to a CSV file.\n\nIf two_cols == true, the output file is a (neig, 2) array (without any complex number).\n\nmpi_rank is the rank of the processor writing the eigenvalue file.\n\n\n\n\n\n","category":"function"},{"location":"api/fancy/fancy/#SlepcWrap.eigenvectors2file","page":"API fancy","title":"SlepcWrap.eigenvectors2file","text":"eigenvectors2file(eps::SlepcEPS, ivecs, vectors_path = \"eigenvectors\"; mpi_rank = 0, type = \"ascii\", format = PETSC_VIEWER_ASCII_CSV)\n\nConcatenate specified eigenvectors in two files : real and imag parts.\n\nWarning\n\nThis function is experimental : it may allocate a lot of memory. Use it at your own risk.\n\n\n\n\n\n","category":"function"},{"location":"api/fancy/fancy/#SlepcWrap.eigenvectors2mat","page":"API fancy","title":"SlepcWrap.eigenvectors2mat","text":"eigenvectors2mat(eps::SlepcEPS, ivecs)\n\nConcatenate specified eigenvectors in two matrices : real and imag parts.\n\n\n\n\n\n","category":"function"},{"location":"api/fancy/fancy/#SlepcWrap.get_eig-Tuple{SlepcEPS, Any}","page":"API fancy","title":"SlepcWrap.get_eig","text":"get_eig(eps::SlepcEPS, ieigs)\n\nGet the ieig-th eigenvalues as a complex array. Starts at 1 (Julia 1-based indexing)\n\n\n\n\n\n","category":"method"},{"location":"api/fancy/fancy/#SlepcWrap.get_eig-Tuple{SlepcEPS, Integer}","page":"API fancy","title":"SlepcWrap.get_eig","text":"get_eig(eps::SlepcEPS, ieig::Integer)\n\nGet the ieig-th eigenvalue as a complex number. Starts at 1 (Julia 1-based indexing)\n\n\n\n\n\n","category":"method"},{"location":"api/fancy/fancy/#SlepcWrap.get_eigenpair-Tuple{SlepcEPS, Any}","page":"API fancy","title":"SlepcWrap.get_eigenpair","text":"get_eigenpair(eps::SlepcEPS, ieig)\n\nReturn the ieig-th eigenpair (eigenvalue, eigenvector). ieig starts at 1 (Julia 1-based indexing)\n\n\n\n\n\n","category":"method"},{"location":"api/fancy/fancy/#SlepcWrap.get_eigenvector-Tuple{SlepcEPS, Any}","page":"API fancy","title":"SlepcWrap.get_eigenvector","text":"get_eigenvector(eps::SlepcEPS, ivec)\n\nReturn a tuple (vecr, veci) corresponding to the ivec-th eigenvector. ivec starts at 1 (Julia 1-based indexing)\n\n\n\n\n\n","category":"method"},{"location":"api/fancy/fancy/#SlepcWrap.get_eigs-Tuple{SlepcEPS}","page":"API fancy","title":"SlepcWrap.get_eigs","text":"get_eigs(eps::SlepcEPS)\n\nReturns all the converged eigenvalues as one complex array\n\n\n\n\n\n","category":"method"}]
}
